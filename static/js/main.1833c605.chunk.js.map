{"version":3,"sources":["resume/Resume.tsx","App.tsx","index.tsx"],"names":["Heading","title","className","List","items","map","item","index","ExperienceNode","role","DateStamp","company","date","Array","isArray","description","ExperienceSection","section","nodes","Education","place","Technologies","style","width","type","Resume","resumeData","heading","name","contact","email","href","linkedIn","mobile","body","App","useState","showToolTip","setToolTip","onMouseEnter","onMouseLeave","fontSize","fontWeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1833c605.chunk.js","sourcesContent":["import \"./Resume.css\";\nimport resumeData from \"./resume-data.json\";\n\nfunction Heading({ title }: any) {\n  return (\n    <div className=\"heading\">\n      <h2 className=\"gradient-text\">{title}</h2>\n      <div className=\"bottom-border\" />\n    </div>\n  );\n}\n\nfunction List({ items }: { items: Array<string> }) {\n  return (\n    <ul>\n      {items.map((item, index) => (\n        <li key={index}>{item}</li>\n      ))}\n    </ul>\n  );\n}\n\nfunction ExperienceNode({ item }: any) {\n  return (\n    <div className=\"experience-node\">\n      <div className=\"circle-container\">\n        <div className=\"circle\"></div>\n      </div>\n      <div className=\"workplace\">\n        <h3>{item.role}</h3>\n        <DateStamp title={item.company} date={item.date} />\n        {Array.isArray(item.description) ? (\n          <List items={item.description} />\n        ) : (\n          <p>{item.description}</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction ExperienceSection({ section }: any) {\n  const renderExperiences = () => {\n    if (section?.nodes) {\n      return section.nodes.map((item: any, index: number) => {\n        return <ExperienceNode key={index} item={item} />;\n      });\n    }\n    if (section?.description) {\n      return <p>{section.description}</p>;\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <Heading title={section.title} />\n      {renderExperiences()}\n    </div>\n  );\n}\n\nfunction DateStamp({ title, date }: any) {\n  return (\n    <p>\n      {title} / <span className=\"date\">{date}</span>\n    </p>\n  );\n}\n\nfunction Education({ section }: any) {\n  return (\n    <>\n      <Heading title={section.title} />\n      <ul>\n        {section.nodes.map((item: any, index: number) => {\n          return (\n            <li key={index}>\n              <div className=\"section\">\n                <DateStamp title={item.place} date={item.date} />\n                <p>{item.description}</p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nfunction Technologies({ section }: any) {\n  return (\n    <div className=\"section\">\n      <Heading title={section.title} />\n      <div className=\"technologies margin-heading\">\n        {section.nodes.map((item: any, index: number) => {\n          return (\n            <div style={{ width: \"33%\" }} key={index}>\n              <h3>{item.type}</h3>\n              <List items={item.description} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction Resume() {\n  return (\n    <div className=\"resume\">\n      <div className=\"header\">\n        <h1>{resumeData.heading.name}</h1>\n        <div className=\"header-socials\">\n          <p>\n            <span className=\"label\">Email:</span>{\" \"}\n            {resumeData.heading.contact.email}\n          </p>\n          <p>\n            <span className=\"label\">linkedIn: </span>\n            <a href={resumeData.heading.contact.linkedIn}>\n              {resumeData.heading.contact.linkedIn}\n            </a>\n          </p>\n          <p>\n            <span className=\"label\">Phone:</span>{\" \"}\n            {resumeData.heading.contact.mobile}\n          </p>\n        </div>\n      </div>\n      <div className=\"resume-body\">\n        {resumeData.body.map((section, index) => {\n          if (section.type === \"education\") {\n            return <Education key={index} section={section} />;\n          }\n          if (section.type === \"technologies\") {\n            return <Technologies key={index} section={section} />;\n          }\n          return <ExperienceSection section={section} key={index} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport { Resume };\n","import { Resume } from \"./resume/Resume\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\nconst text =\n  \"You can save this as a PDF! Right click on the page, then select 'Print'. Ensure 'Destination' is 'Save as PDF', and that 'Margins' is set to 'None'.\";\n\nfunction App() {\n  const [showToolTip, setToolTip] = useState(false);\n\n  return (\n    <>\n      <div className=\"page\">\n        <Resume />\n      </div>\n      <div\n        className=\"tool-tip\"\n        onMouseEnter={() => setToolTip(true)}\n        onMouseLeave={() => setToolTip(false)}\n      >\n        {showToolTip ? (\n          text\n        ) : (\n          <span style={{ fontSize: \"20px\", fontWeight: 600 }}>?</span>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}